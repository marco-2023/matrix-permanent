name: Build and Publish Wheels

on:
  push:
    tags:
      - "v*.*.*"  # triggers on version tags like v1.2.3
  pull_request:

env:
  PYPI_NAME: qc-permanent

permissions:
  contents: read  # checkout

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install cibuildwheel
        run: pip install cibuildwheel==3.14.0

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_SKIP: pp*  # skip PyPy builds
          CIBW_TEST_COMMAND: "pytest -q {project}/tests"
          CIBW_TEST_REQUIRES: pytest

      - name: List built wheels
        run: ls -l wheelhouse/

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python }}
          path: wheelhouse/*.whl

  # publish:
  #   name: Publish to PyPI
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: [build_wheels]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Download all built wheels
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: dist

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist
