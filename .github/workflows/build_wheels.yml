name: Build and Publish Wheels

# on:
#   push:
#     tags:
#       - "v*.*.*"  # triggers on version tags like v1.2.3
#   pull_request:
on:
  push:
    branches: [ ci-test ]
  pull_request:
    branches: [ ci-test ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel pytest

      - name: Build and test wheels
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest /project/tests"

        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Show built wheels
        run: ls -lh wheelhouse/

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: qc-permanent-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl



  # publish:
  #   name: Publish to PyPI
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: [build_wheels]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Download all built wheels
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: dist

  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist
